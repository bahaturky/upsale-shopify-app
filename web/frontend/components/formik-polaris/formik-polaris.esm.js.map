{"version":3,"file":"formik-polaris.esm.js","sources":["../src/usePolarisField.ts","../src/Checkbox.tsx","../src/Select.tsx","../src/TextField.tsx","../src/RangeSlider.tsx"],"sourcesContent":["import { useEffect, useCallback, useMemo } from 'react';\nimport { useFormikContext, FieldValidator } from 'formik';\n\nexport interface UsePolarisFieldProps<V = any, T = V> {\n  /**\n   * The field identifier that formik can use to\n   * connect this field to the data. Will also be\n   * used as the polaris id\n   */\n  name: string;\n\n  /**\n   * Optional helper to convert from\n   * non-string values to a string\n   */\n  decode?: (value: V) => T;\n\n  /**\n   * Optional helper to convert from\n   * current string value to non-string value\n   */\n  encode?: (raw: T) => V;\n\n  /**\n   * Pass in a validation function to this field specifically\n   */\n  validate?: FieldValidator;\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport function usePolarisField<V = any, T = V>(\n  props: UsePolarisFieldProps<V, T>,\n) {\n  const { name, encode, decode, validate } = props;\n\n  // Modified from https://github.com/jaredpalmer/formik/blob/5553720b5d6c9729cb3b12fd7948f28ad3be9adc/src/Field.tsx#L74\n\n  const {\n    registerField,\n    unregisterField,\n    getFieldProps,\n    getFieldMeta,\n    isSubmitting,\n    setFieldError,\n    setFieldValue,\n  } = useFormikContext<any>();\n\n  useEffect(() => {\n    if (name) {\n      registerField(name, { validate });\n    }\n    return () => {\n      if (name) {\n        unregisterField(name);\n      }\n    };\n  }, [name, registerField, unregisterField, validate]);\n\n  const field = getFieldProps<V>({ name });\n  const meta = getFieldMeta<V>(name);\n\n  const value = useMemo(() => (decode ? decode(field.value) : field.value), [\n    decode,\n    field.value,\n  ]);\n\n  const handleFocus = useCallback(() => {\n    setFieldError(name, '');\n  }, [name, setFieldError]);\n\n  const handleBlur = useCallback(() => {\n    field.onBlur({ target: { name } });\n  }, [field, name]);\n\n  const handleChange = useCallback(\n    (v: T) => {\n      setFieldValue(name, encode ? encode(v) : v);\n    },\n    [encode, name, setFieldValue],\n  );\n\n  const error = useMemo(() => {\n    if (meta.error && meta.touched) {\n      return meta.error;\n    }\n\n    return undefined;\n  }, [meta.error, meta.touched]);\n\n  return useMemo(\n    () => ({\n      ...field,\n      ...meta,\n      handleFocus,\n      handleBlur,\n      handleChange,\n      value,\n      isSubmitting,\n      error,\n    }),\n    [\n      error,\n      field,\n      handleBlur,\n      handleChange,\n      handleFocus,\n      isSubmitting,\n      meta,\n      value,\n    ],\n  );\n}\n","import React from 'react';\nimport {\n  Checkbox as PolarisCheckbox,\n  CheckboxProps as PolarisCheckboxProps,\n} from '@shopify/polaris';\nimport { usePolarisField, UsePolarisFieldProps } from './usePolarisField';\nimport { Omit, OmittedPolarisProps } from './types';\n\ntype Props<V> = UsePolarisFieldProps<V, boolean> & PolarisCheckboxProps;\n\nexport type CheckboxProps<V> = Omit<Props<V>, OmittedPolarisProps>;\n\nfunction CheckboxField<V = any>(props: CheckboxProps<V>) {\n  const { name, encode, decode, validate, ...polarisProps } = props;\n\n  const {\n    value: rawValue,\n    isSubmitting,\n    handleFocus,\n    handleBlur,\n    handleChange,\n    error,\n  } = usePolarisField<V, boolean>({ name, encode, decode, validate });\n\n  const value = rawValue === undefined ? false : rawValue;\n  if (typeof value !== 'boolean') {\n    throw new Error(\n      `[Checkbox] Found value of type \"${typeof value}\" for field \"${name}\". Requires boolean (after decode)`,\n    );\n  }\n\n  return (\n    <PolarisCheckbox\n      id={name}\n      error={error}\n      disabled={isSubmitting}\n      {...polarisProps}\n      checked={value}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onChange={handleChange}\n    />\n  );\n}\n\nexport default CheckboxField;\n","import React from 'react';\nimport {\n  Select as PolarisSelect,\n  SelectProps as PolarisSelectProps,\n} from '@shopify/polaris';\nimport { Omit, OmittedPolarisProps } from './types';\nimport { UsePolarisFieldProps, usePolarisField } from './usePolarisField';\n\ntype Props<V> = UsePolarisFieldProps<V, string | undefined> &\n  PolarisSelectProps;\n\nexport type SelectProps<V> = Omit<Props<V>, OmittedPolarisProps>;\n\nfunction SelectField<V = any>(props: SelectProps<V>) {\n  const { name, encode, decode, validate, ...polarisProps } = props;\n\n  const {\n    value,\n    isSubmitting,\n    handleFocus,\n    handleBlur,\n    handleChange,\n    error,\n  } = usePolarisField<V, string | undefined>({\n    name,\n    encode,\n    decode,\n    validate,\n  });\n\n  if (typeof value !== 'string' && value !== undefined) {\n    throw new Error(\n      `[Select] Found value of type \"${typeof value}\" for field \"${name}\". Requires string (after decode)`,\n    );\n  }\n\n  return (\n    <PolarisSelect\n      id={name}\n      error={error}\n      disabled={isSubmitting}\n      {...polarisProps}\n      value={value as string | undefined}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onChange={handleChange}\n    />\n  );\n}\n\nexport default SelectField;\n","import React from 'react';\nimport {\n  TextField as PolarisTextField,\n  TextFieldProps as PolarisTextFieldProps,\n} from '@shopify/polaris';\nimport { usePolarisField, UsePolarisFieldProps } from './usePolarisField';\nimport { Omit, OmittedPolarisProps } from './types';\n\ntype Props<V> = UsePolarisFieldProps<V, string> & PolarisTextFieldProps;\n\nexport type TextFieldProps<V = any> = Omit<Props<V>, OmittedPolarisProps>;\n\nfunction TextField<V = any>(props: TextFieldProps<V>) {\n  const { name, encode, decode, validate, ...polarisProps } = props;\n\n  const {\n    value: rawValue,\n    isSubmitting,\n    handleFocus,\n    handleBlur,\n    handleChange,\n    error,\n  } = usePolarisField<V, string>({ name, encode, decode, validate });\n\n  const value = rawValue === undefined ? '' : rawValue;\n  if (typeof value !== 'string') {\n    throw new Error(\n      `[TextField] Found value of type \"${typeof value}\" for field \"${name}\". Requires string (after decode)`,\n    );\n  }\n\n  return (\n    <PolarisTextField\n      id={name}\n      error={error}\n      disabled={isSubmitting}\n      {...polarisProps}\n      value={value}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onChange={handleChange}\n    />\n  );\n}\n\nexport default TextField;\n","import React from 'react';\nimport {\n  RangeSlider as PolarisRangeSlider,\n  RangeSliderProps as PolarisRangeSliderProps,\n} from '@shopify/polaris';\nimport { usePolarisField, UsePolarisFieldProps } from './usePolarisField';\nimport { Omit, OmittedPolarisProps } from './types';\n\nexport type RangeSliderValue = PolarisRangeSliderProps['value'];\n\ntype Props<V> = UsePolarisFieldProps<V, RangeSliderValue> &\n  PolarisRangeSliderProps;\n\nexport type RangeSliderProps<V = any> = Omit<Props<V>, OmittedPolarisProps>;\n\nfunction RangeSlider<V = any>(props: RangeSliderProps<V>) {\n  const { name, encode, decode, validate, ...polarisProps } = props;\n\n  const {\n    value: rawValue,\n    isSubmitting,\n    handleFocus,\n    handleBlur,\n    handleChange,\n    error,\n  } = usePolarisField<V, RangeSliderValue>({ name, encode, decode, validate });\n\n  const value = rawValue === undefined ? '' : rawValue;\n  if (typeof value !== 'number' && !Array.isArray(value)) {\n    throw new Error(\n      `[RangeSlider] Found value of type \"${typeof value}\" for field \"${name}\". Requires number or [number, number] (after decode)`,\n    );\n  }\n\n  return (\n    <PolarisRangeSlider\n      id={name}\n      error={error}\n      disabled={isSubmitting}\n      {...polarisProps}\n      value={value}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onChange={handleChange}\n    />\n  );\n}\n\nexport default RangeSlider;\n"],"names":["usePolarisField","props","name","encode","decode","validate","useFormikContext","registerField","unregisterField","getFieldProps","getFieldMeta","isSubmitting","setFieldError","setFieldValue","useEffect","field","meta","value","useMemo","handleFocus","useCallback","handleBlur","onBlur","target","handleChange","v","error","touched","undefined","CheckboxField","polarisProps","rawValue","Error","React","PolarisCheckbox","id","disabled","checked","onFocus","onChange","SelectField","PolarisSelect","TextField","PolarisTextField","RangeSlider","Array","isArray","PolarisRangeSlider"],"mappings":"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"}